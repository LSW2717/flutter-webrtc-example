// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'data/local/user/model/user_entity.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(8, 4334373542638132859),
      name: 'UserEntity',
      lastPropertyId: const obx_int.IdUid(3, 1300457433821658963),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 6808830086220998318),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 2187406451590106660),
            name: 'userId',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 1300457433821658963),
            name: 'userName',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(10, 2073905738726513753),
      lastIndexId: const obx_int.IdUid(0, 0),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [
        3830174523249469470,
        3318376663316502545,
        736326931634827582,
        1485011608309166437,
        5513852787128603346,
        7380388802770131022,
        2207048126834333347,
        2878522754651094484,
        2073905738726513753
      ],
      retiredIndexUids: const [],
      retiredPropertyUids: const [
        5130263069368401385,
        2134119548847805952,
        4511526132065150557,
        5744956748015944461,
        6187011809145864272,
        7014855139521393172,
        2870325314635024937,
        1422215312921108953,
        7846105348560100954,
        3986620339753594091,
        7105491219266127235,
        6406342582700216591,
        1507034322967874101,
        5774027357411870794,
        807365988279549539,
        7368878960871049738,
        6432601567038094565,
        3585618883646720720,
        968089955776178215,
        6772544233435303273,
        5314219544486258474,
        2752641977997712248,
        4522617294401375780,
        7650783917749629178,
        538539644726181703,
        8554257091919747779,
        8297856818846858344,
        3731170702395087321,
        1942024952107562495,
        5102539346311773937,
        4074096701529859291,
        5726215674504502275,
        8250798956550549128,
        2343635592840100726,
        3835647031717225898,
        2194275333645403208,
        3861705140974498749,
        4422242773245054065,
        6315435936823351605,
        2180653164455068448,
        2713602163400912778,
        8647242673530931593,
        3568641495370586569,
        5153048809177922998,
        2751448412221232080,
        1503930388634025147
      ],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    UserEntity: obx_int.EntityDefinition<UserEntity>(
        model: _entities[0],
        toOneRelations: (UserEntity object) => [],
        toManyRelations: (UserEntity object) => {},
        getId: (UserEntity object) => object.id,
        setId: (UserEntity object, int id) {
          object.id = id;
        },
        objectToFB: (UserEntity object, fb.Builder fbb) {
          final userIdOffset = fbb.writeString(object.userId);
          final userNameOffset = fbb.writeString(object.userName);
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, userIdOffset);
          fbb.addOffset(2, userNameOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final userIdParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final userNameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final object = UserEntity(
              userId: userIdParam, userName: userNameParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [UserEntity] entity fields to define ObjectBox queries.
class UserEntity_ {
  /// See [UserEntity.id].
  static final id =
      obx.QueryIntegerProperty<UserEntity>(_entities[0].properties[0]);

  /// See [UserEntity.userId].
  static final userId =
      obx.QueryStringProperty<UserEntity>(_entities[0].properties[1]);

  /// See [UserEntity.userName].
  static final userName =
      obx.QueryStringProperty<UserEntity>(_entities[0].properties[2]);
}
